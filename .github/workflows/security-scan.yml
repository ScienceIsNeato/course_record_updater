name: Security Scan

on:
  schedule:
    # Run security scan daily at 2 AM UTC
    - cron: '0 2 * * *'
  push:
    branches: [ main ]
    paths:
      - 'requirements*.txt'
  pull_request:
    branches: [ main ]
    paths:
      - 'requirements*.txt'

jobs:
  dependency-security:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: 3.11

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install safety bandit
        pip install -r requirements.txt
        pip install -r requirements-dev.txt

    - name: Run Safety check
      run: |
        safety check --json --output safety-report.json || true
        safety check --short-report

    - name: Run Bandit security scan
      run: |
        bandit -r . -x venv,cursor-rules,.venv,logs -f json -o bandit-report.json || true
        bandit -r . -x venv,cursor-rules,.venv,logs -f txt

    - name: Upload security reports
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: security-reports
        path: |
          safety-report.json
          bandit-report.json
        retention-days: 30

    - name: Create security issue on failure
      if: failure()
      uses: actions/github-script@v6
      with:
        script: |
          const title = 'Security vulnerabilities detected';
          const body = `
          ## Security Scan Results

          The automated security scan has detected potential vulnerabilities.

          **Action Required:**
          - Review the security reports in the workflow artifacts
          - Update vulnerable dependencies
          - Address any code security issues identified by Bandit

          **Workflow:** ${{ github.workflow }}
          **Run ID:** ${{ github.run_id }}
          `;

          github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: title,
            body: body,
            labels: ['security', 'automated']
          });

  codeql-analysis:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'python' ]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: ${{ matrix.language }}
        queries: security-extended,security-and-quality

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
      with:
        category: "/language:${{matrix.language}}"
