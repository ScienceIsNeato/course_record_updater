name: Quality Gate

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  quality-gate:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: [3.9, 3.11, 3.13]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
    
    - name: Run Quality Gate - Essential Checks
      run: |
        python scripts/ship_it.py --checks format lint
      env:
        PYTHONPATH: .
    
    - name: Run Tests with Coverage
      run: |
        python scripts/ship_it.py --checks tests
      env:
        PYTHONPATH: .
    
    - name: Upload Coverage to Codecov
      if: matrix.python-version == '3.11'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  security-audit:
    runs-on: ubuntu-latest
    needs: quality-gate
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
    
    - name: Run Security Audit
      run: |
        python scripts/ship_it.py --checks security
      env:
        PYTHONPATH: .
    
    - name: Upload security scan results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: security-scan-results
        path: |
          bandit-report.json
          safety-report.txt

  type-checking:
    runs-on: ubuntu-latest
    needs: quality-gate
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
    
    - name: Run Type Checking
      run: |
        python scripts/ship_it.py --checks types
      env:
        PYTHONPATH: .

  comprehensive-validation:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'comprehensive-check')
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
    
    - name: Run Full Quality Suite
      run: |
        python scripts/ship_it.py --checks format lint tests security types imports
      env:
        PYTHONPATH: .
    
    - name: Upload comprehensive results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: comprehensive-quality-results
        path: |
          coverage.xml
          htmlcov/
          bandit-report.json
